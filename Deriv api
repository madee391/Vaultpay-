import { createClient } from 'npm:@supabase/supabase-js';
import { WebSocket } from 'npm:ws';

Deno.serve(async (req: Request) => {
  const supabase = createClient(
    Deno.env.get('SUPABASE_URL')!, 
    Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!
  );

  const { user } = await supabase.auth.getUser(req.headers.get('Authorization'));
  if (!user) {
    return new Response(JSON.stringify({ error: 'Unauthorized' }), { status: 401 });
  }

  return new Promise((resolve, reject) => {
    const ws = new WebSocket('wss://ws.binaryws.com/websockets/v3');

    ws.onopen = () => {
      ws.send(JSON.stringify({
        authorize: Deno.env.get('DERIV_API_TOKEN'),
        req_id: 1
      }));
    };

    ws.onmessage = async (event) => {
      const data = JSON.parse(event.data.toString());

      await supabase.from('trading_activities').insert({
        user_id: user.id,
        activity_data: JSON.stringify(data),
        timestamp: new Date().toISOString()
      });

      resolve(new Response(JSON.stringify(data), {
        headers: { 'Content-Type': 'application/json' }
      }));
    };

    ws.onerror = () => {
      reject(new Response(JSON.stringify({ error: 'WebSocket Error' }), { status: 500 }));
    };
  });
});
