<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Vaultpay</title>
<style>
  /* === Dcash-inspired style === */
  :root {
    --bg: #f9fafc;
    --card-bg: #ffffff;
    --primary: #0078d4;
    --primary-dark: #005a9e;
    --text-primary: #212121;
    --text-muted: #757575;
    --border: #e0e0e0;
    --shadow: rgba(0, 0, 0, 0.1);
    --font: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  * { box-sizing: border-box; }
  body {
    margin: 0;
    font-family: var(--font);
    background: var(--bg);
    color: var(--text-primary);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: 20px 10px;
  }
  .app {
    max-width: 480px;
    width: 100%;
    background: var(--card-bg);
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 4px 12px var(--shadow);
  }
  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
  }
  .brand {
    display: flex;
    align-items: center;
    gap: 16px;
  }
  .logo {
    width: 48px;
    height: 48px;
    border-radius: 8px;
    background: var(--primary);
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: 700;
    font-size: 1.25rem;
    user-select: none;
  }
  h1 {
    margin: 0;
    font-weight: 700;
    font-size: 1.5rem;
  }
  .header-actions button {
    background: var(--primary);
    border: none;
    padding: 10px 18px;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    color: white;
    transition: background-color 0.3s ease;
    box-shadow: 0 2px 6px var(--shadow);
  }
  .header-actions button:hover:not(:disabled) {
    background: var(--primary-dark);
  }
  button:disabled {
    background: #cfd8dc;
    cursor: not-allowed;
  }
  main {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  .card {
    background: var(--card-bg);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 1px 4px var(--shadow);
  }
  .card h2 {
    margin-top: 0;
    margin-bottom: 16px;
    font-weight: 600;
    font-size: 1.2rem;
    border-bottom: 1px solid var(--border);
    padding-bottom: 8px;
  }
  .balance-amount {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 12px;
    color: var(--primary);
  }
  #transaction-history {
    max-height: 200px;
    overflow-y: auto;
    font-size: 0.9rem;
    color: var(--text-primary);
  }
  #transaction-history table {
    width: 100%;
    border-collapse: collapse;
  }
  #transaction-history th,
  #transaction-history td {
    padding: 10px 8px;
    border-bottom: 1px solid var(--border);
    text-align: left;
  }
  #transaction-history th {
    background: var(--bg);
    position: sticky;
    top: 0;
  }
  .info-link {
    color: var(--primary);
    cursor: pointer;
    font-weight: 600;
    text-decoration: underline;
    font-size: 0.9rem;
  }
  /* Floating WhatsApp button */
  .floating-whatsapp {
    position: fixed;
    bottom: 24px;
    right: 24px;
    width: 60px;
    height: 60px;
    background: #25d366;
    border-radius: 50%;
    box-shadow: 0 3px 6px rgba(0,0,0,0.15);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: box-shadow 0.2s ease;
  }
  .floating-whatsapp:hover {
    box-shadow: 0 5px 12px rgba(0,0,0,0.3);
  }
  .floating-whatsapp svg {
    width: 32px;
    height: 32px;
    fill: white;
  }
  /* Modal styles */
  #info-modal {
    display: none;
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.6);
    z-index: 9998;
    justify-content: center;
    align-items: center;
    padding: 16px;
  }
  #info-modal.active {
    display: flex;
  }
  #info-modal .modal-content {
    background: var(--card-bg);
    border-radius: 12px;
    padding: 24px;
    max-width: 400px;
    max-height: 80vh;
    overflow-y: auto;
    color: var(--text-primary);
    box-shadow: 0 4px 12px var(--shadow);
  }
  #info-modal h3 {
    margin-top: 0;
    margin-bottom: 16px;
    font-weight: 700;
    font-size: 1.3rem;
  }
  #info-modal button.close-btn {
    background: var(--primary);
    color: white;
    font-weight: 700;
    border: none;
    padding: 10px 18px;
    border-radius: 8px;
    cursor: pointer;
    margin-top: 20px;
    width: 100%;
    transition: background-color 0.3s ease;
  }
  #info-modal button.close-btn:hover {
    background: var(--primary-dark);
  }
  /* Responsive */
  @media (max-width: 480px) {
    .app {
      padding: 16px;
    }
    header {
      flex-direction: column;
      align-items: flex-start;
      gap: 12px;
    }
    .header-actions {
      width: 100%;
      display: flex;
      justify-content: space-between;
    }
  }
</style>
</head>
<body>
<div class="app">
  <header>
    <div class="brand">
      <div class="logo">V</div>
      <h1>Vaultpay</h1>
    </div>
    <div class="header-actions">
      <button id="login-btn">Login with Deriv</button>
      <button id="logout-btn" disabled>Logout</button>
    </div>
  </header>

  <main>
    <div class="card">
      <h2>Your Balance</h2>
      <div>
        <div><strong>USD:</strong> <span id="balance-usd">--</span></div>
        <div><strong>GBP:</strong> <span id="balance-gbp">--</span></div>
        <div><strong>KSH:</strong> <span id="balance-ksh">--</span></div>
      </div>
    </div>

    <div class="card">
      <h2>Actions</h2>
      <button id="deposit-btn" disabled>Deposit</button>
      <button id="withdraw-btn" disabled>Withdraw</button>
      <div class="info-link" id="show-info">Deposit & Withdraw Info</div>
    </div>

    <div class="card">
      <h2>Transaction History</h2>
      <div id="transaction-history">
        <table>
          <thead>
            <tr><th>Type</th><th>Amount (USD)</th><th>Date</th></tr>
          </thead>
          <tbody id="history-body">
          <!-- Transactions appear here -->
          </tbody>
        </table>
      </div>
    </div>
  </main>
</div>

<!-- WhatsApp floating icon -->
<div class="floating-whatsapp" id="whatsapp-btn" title="Contact Support">
  <svg viewBox="0 0 24 24"><path d="M20.52 3.48A11.94 11.94 0 0 0 12 0C5.373 0 0 5.373 0 12a11.924 11.924 0 0 0 2.13 6.5L0 24l5.63-2.125A11.952 11.952 0 0 0 12 24c6.627 0 12-5.373 12-12 0-3.213-1.254-6.23-3.48-8.52zm-8.687 16.12a9.02 9.02 0 0 1-4.848-1.422l-.346-.214-3.34 1.26 1.256-3.25-.222-.352A9.04 9.04 0 1 1 11.83 19.6zM16.22 14.48c-.193-.097-1.14-.562-1.318-.626-.178-.065-.31-.097-.44.097-.13.195-.502.626-.616.754-.113.13-.226.146-.418.05-.193-.097-.81-.3-1.547-.955-.572-.51-.958-1.142-1.07-1.337-.113-.195-.012-.3.086-.395.088-.087.195-.226.293-.34.097-.113.13-.195.195-.325.065-.13.03-.244-.015-.34-.045-.097-.44-1.06-.602-1.456-.158-.382-.318-.33-.44-.336-.113-.007-.244-.008-.375-.008a1.322 1.322 0 0 0-.95.442c-.33.33-1.26 1.233-1.26 3.003 0 1.77 1.29 3.487 1.472 3.726.18.24 2.54 3.87 6.16 5.42.86.37 1.53.59 2.05.754.86.273 1.64.234 2.25.142.686-.104 2.14-.873 2.44-1.717.3-.843.3-1.566.21-1.717-.09-.15-.327-.243-.62-.39z"/></svg>
</div>

<!-- Info Modal -->
<div id="info-modal">
  <div class="modal-content">
    <h3>Deposit & Withdrawal Info</h3>
    <p>Minimum deposit and withdrawal: 0.5 USD or GBP</p>
    <p>Markup fee: 2.5% (hidden, automatically added)</p>
    <p>All transactions processed instantly.</p>
    <p>Contact support on WhatsApp anytime: <a href="https://wa.me/254758419976" target="_blank">+254 758 419 976</a></p>
    <p>Affiliate link: <a href="https://partners.deriv.com/rx?sidc=8B834F18-9089-4971-995A-5CBB8D7788EB&utm_campaign=dynamicworks&utm_medium=affiliate&utm_source=CU38529" target="_blank">Join Deriv via Vaultpay</a></p>
    <button class="close-btn" id="close-info">Close</button>
  </div>
</div>

<script>
  // Deriv WebSocket & App Config
  const app_id = 93522;
  const deriv_api_token = 'YOUR_DERIV_API_TOKEN'; // Replace with your real Deriv API token (keep secret)
  const whatsappNumber = '254758419976';
  const affiliateLink = 'https://partners.deriv.com/rx?sidc=8B834F18-9089-4971-995A-5CBB8D7788EB&utm_campaign=dynamicworks&utm_medium=affiliate&utm_source=CU38529';

  // Currency conversion rates (update as needed)
  const usd_to_ksh = 128;
  const gbp_to_ksh = 164;
  const usd_to_gbp = 0.78;

  // Markup fee (2.5%) hidden from user, applied internally
  const markup = 0.025;

  // Elements
  const loginBtn = document.getElementById('login-btn');
  const logoutBtn = document.getElementById('logout-btn');
  const balanceUSD = document.getElementById('balance-usd');
  const balanceGBP = document.getElementById('balance-gbp');
  const balanceKSH = document.getElementById('balance-ksh');
  const depositBtn = document.getElementById('deposit-btn');
  const withdrawBtn = document.getElementById('withdraw-btn');
  const whatsappBtn = document.getElementById('whatsapp-btn');
  const showInfo = document.getElementById('show-info');
  const infoModal = document.getElementById('info-modal');
  const closeInfo = document.getElementById('close-info');
  const historyBody = document.getElementById('history-body');

  // State
  let websocket;
  let authorized = false;
  let balanceUSDValue = 0;
  let transactionHistory = [];

  // Connect WebSocket and authorize
  function connectDeriv() {
    websocket = new WebSocket(`wss://ws.derivws.com/websockets/v3?app_id=${app_id}`);

    websocket.onopen = () => {
      console.log('Connected to Deriv WS');
      websocket.send(JSON.stringify({
        authorize: deriv_api_token
      }));
    };

    websocket.onmessage = (msg) => {
      const data = JSON.parse(msg.data);
      if (data.msg_type === 'authorize') {
        if (data.error) {
          alert('Authorization failed: ' + data.error.message);
          return;
        }
        authorized = true;
        loginBtn.disabled = true;
        logoutBtn.disabled = false;
        depositBtn.disabled = false;
        withdrawBtn.disabled = false;
        getBalance();
        subscribeTransactions();
      }
      else if (data.msg_type === 'balance') {
        const rawUSD = data.balance.balance;
        balanceUSDValue = rawUSD;
        updateBalances(rawUSD);
      }
      else if (data.msg_type === 'transaction') {
        if(data.transaction) {
          addTransaction(data.transaction);
        }
      }
    };

    websocket.onerror = (e) => {
      console.error('WebSocket error', e);
      alert('WebSocket error. Check console.');
    };

    websocket.onclose = () => {
      console.log('WebSocket closed');
      authorized = false;
      loginBtn.disabled = false;
      logoutBtn.disabled = true;
      depositBtn.disabled = true;
      withdrawBtn.disabled = true;
    };
  }

  function getBalance() {
    websocket.send(JSON.stringify({ balance: 1 }));
  }

  // Update balance displays with markup applied internally but not shown
  function updateBalances(rawUSD) {
    // Show raw USD to user (no markup visible)
    balanceUSD.innerText = `$${rawUSD.toFixed(2)}`;
    const gbp = rawUSD * usd_to_gbp;
    balanceGBP.innerText = `£${gbp.toFixed(2)}`;
    const ksh = rawUSD * usd_to_ksh;
    balanceKSH.innerText = `KSh ${ksh.toFixed(2)}`;
  }

  // Add transaction to history and update table
  function addTransaction(tx) {
    // tx example: { id, action, amount, currency, transaction_time }
    transactionHistory.unshift(tx); // newest first
    if(transactionHistory.length > 50) transactionHistory.pop();
    renderTransactionHistory();
  }

  function renderTransactionHistory() {
    historyBody.innerHTML = '';
    transactionHistory.forEach(tx => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${tx.action}</td>
        <td>${formatCurrency(tx.amount, tx.currency)}</td>
        <td>${new Date(tx.transaction_time).toLocaleString()}</td>
      `;
      historyBody.appendChild(tr);
    });
  }

  function formatCurrency(amount, currency) {
    let symbol = '';
    if(currency === 'USD') symbol = '$';
    else if(currency === 'GBP') symbol = '£';
    else if(currency === 'KES' || currency === 'KSH') symbol = 'KSh ';
    else symbol = currency + ' ';
    return symbol + Number(amount).toFixed(2);
  }

  // Deposit and Withdraw handlers
  depositBtn.onclick = () => {
    let minDepositUSD = 0.5;
    let amountUSD = prompt(`Enter deposit amount in USD (min ${minDepositUSD}):`);
    if (amountUSD === null) return; // Cancelled
    amountUSD = parseFloat(amountUSD);
    if (isNaN(amountUSD) || amountUSD < minDepositUSD) {
      alert(`Invalid amount. Minimum deposit is $${minDepositUSD}`);
      return;
    }
    // Apply markup internally
